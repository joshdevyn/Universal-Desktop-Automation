<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.automation</groupId>
    <artifactId>universal-desktop-automation</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
    <name>Universal Desktop Automation Framework</name>
    <description>A comprehensive Java-based        <!-- Safety Validation Profile - TEMPORARILY DISABLED FOR DEMO
        <profile>
            <id>safety-validation</id>
            <activation>
                <property>
                    <n>safety.validate</n>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>safety-lint-check</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>scripts/safety-lint.sh</argument>
                                        <argument>src/test/resources/features</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>comprehensive-safety-validation</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>scripts/safety-validate.sh</argument>
                                        <argument>src/test/resources/features</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>enforce-safety-standards</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>SAFETY.md</file>
                                                <file>scripts/safety-lint.sh</file>
                                                <file>scripts/safety-validate.sh</file>
                                            </files>
                                            <message> Required safety documentation and scripts must exist!</message>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        END DISABLED SAFETY VALIDATION -->

        <!-- 🛡️ Safe Testing Profile - TEMPORARILY DISABLED FOR DEMO -->Automation framework for Windows applications</description>
    
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <sikulix.version>2.0.5</sikulix.version>
        <tesseract.version>5.8.0</tesseract.version>
        <extentreports.version>5.0.9</extentreports.version>
        <jackson.version>2.15.2</jackson.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <cucumber.version>7.14.0</cucumber.version>        <selenium.version>4.11.0</selenium.version>
        <junit.version>5.9.3</junit.version>
          <!-- 🛡️ Safety Configuration - TEMPORARILY DISABLED FOR DEMO -->
        <safety.validation.enabled>false</safety.validation.enabled>
        <safety.lint.fail.on.violations>false</safety.lint.fail.on.violations>
        <safety.features.path>src/test/resources/features</safety.features.path>
        <safety.validation.skip>true</safety.validation.skip>
    </properties>
    
    <dependencies>
        <!-- JUnit 5 Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.9.3</version>
        </dependency>
        
        <!-- SikuliX for image recognition -->
        <dependency>
            <groupId>com.sikulix</groupId>
            <artifactId>sikulixapi</artifactId>
            <version>${sikulix.version}</version>
        </dependency>
        
        <!-- Tesseract for OCR -->
        <dependency>
            <groupId>net.sourceforge.tess4j</groupId>
            <artifactId>tess4j</artifactId>
            <version>${tesseract.version}</version>
        </dependency>
          <!-- ExtentReports for reporting -->
        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports</artifactId>
            <version>${extentreports.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                </exclusion>
            </exclusions>
        </dependency>        <!-- ExtentReports Cucumber Adapter - Commented out due to compatibility issues -->
        <!--
        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports-cucumber7-adapter</artifactId>
            <version>1.14.0</version>
        </dependency>
        -->
        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.15.2</version>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.15.2</version>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
            <version>2.15.2</version>
        </dependency>
        
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
        
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.13.0</version>
        </dependency>
        
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>5.13.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.7</version>
        </dependency>
          <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.8</version>
        </dependency>
        
        <!-- Cucumber BDD Dependencies -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <version>1.9.3</version>
        </dependency>
        
        <!-- Apache POI for Excel file support -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.2.4</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.4</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>5.2.4</version>
        </dependency>
        
        <!-- OpenCSV for enhanced CSV support -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.8</version>
        </dependency>
    </dependencies>
      <build>
        <pluginManagement>
            <plugins>
                <!-- Plugin management for IDE integration -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <!-- Configure JAR plugin executions for IDE -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-jar-plugin</artifactId>
                                        <versionRange>[3.3.0,)</versionRange>
                                        <goals>
                                            <goal>jar</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>
                                            <runOnIncremental>false</runOnIncremental>
                                        </execute>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <release>17</release>
                </configuration>
            </plugin><plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*TestRunner.java</include>
                    </includes>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.displayname.generator.default=org.junit.jupiter.api.DisplayNameGenerator$ReplaceUnderscores
                        </configurationParameters>
                    </properties>
                    <!-- Support both JUnit 4 and JUnit 5 -->
                    <statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>false</disable>
                        <version>3.0</version>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                        <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                        <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                    </statelessTestsetReporter>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit4</artifactId>
                        <version>3.2.5</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>3.2.5</version>
                    </dependency>
                </dependencies>
            </plugin>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>
      <!-- Build profiles for different scenarios -->
    <profiles>
        <profile>
            <id>build-mocks</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        
        <profile>
            <id>build-executables</id>
            <build>
                <plugins>
                    <!-- Build mock application JARs first -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <!-- Build SAP GUI Mock JAR with test classes -->
                            <execution>
                                <id>sap-mock</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>sap-mock</classifier>
                                    <outputDirectory>${project.build.directory}/mock-apps</outputDirectory>
                                    <finalName>SAPGUIMock</finalName>
                                    <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
                                    <archive>
                                        <manifest>
                                            <mainClass>com.automation.mock.SAPGUIMock</mainClass>
                                            <addClasspath>true</addClasspath>
                                            <classpathPrefix>lib/</classpathPrefix>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>
                            
                            <!-- Build AS400 Terminal Mock JAR with test classes -->
                            <execution>
                                <id>as400-mock</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>as400-mock</classifier>
                                    <outputDirectory>${project.build.directory}/mock-apps</outputDirectory>
                                    <finalName>AS400TerminalMock</finalName>
                                    <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
                                    <archive>
                                        <manifest>
                                            <mainClass>com.automation.mock.AS400TerminalMock</mainClass>
                                            <addClasspath>true</addClasspath>
                                            <classpathPrefix>lib/</classpathPrefix>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>
                            
                            <!-- Build Excel Mock JAR with test classes -->
                            <execution>
                                <id>excel-mock</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>excel-mock</classifier>
                                    <outputDirectory>${project.build.directory}/mock-apps</outputDirectory>
                                    <finalName>ExcelMock</finalName>
                                    <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
                                    <archive>
                                        <manifest>
                                            <mainClass>com.automation.mock.ExcelMock</mainClass>
                                            <addClasspath>true</addClasspath>
                                            <classpathPrefix>lib/</classpathPrefix>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>
                            
                            <!-- Build Oracle Forms Mock JAR with test classes -->
                            <execution>
                                <id>oracle-forms-mock</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>oracle-forms-mock</classifier>
                                    <outputDirectory>${project.build.directory}/mock-apps</outputDirectory>
                                    <finalName>OracleFormsMock</finalName>
                                    <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
                                    <archive>
                                        <manifest>
                                            <mainClass>com.automation.mock.OracleFormsMock</mainClass>
                                            <addClasspath>true</addClasspath>
                                            <classpathPrefix>lib/</classpathPrefix>
                                        </manifest>
                                    </archive>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- Copy dependencies for mock applications -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.0</version>
                        <executions>
                            <execution>
                                <id>copy-shared-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/mock-apps/lib</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- Create native executables using jpackage -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <!-- Create SAP GUI Mock executable -->
                            <execution>
                                <id>create-sap-gui-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>                                <configuration>
                                    <executable>jpackage</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>--input</argument>
                                        <argument>mock-apps</argument>
                                        <argument>--name</argument>
                                        <argument>SAPGUIMock</argument>
                                        <argument>--main-jar</argument>
                                        <argument>SAPGUIMock-sap-mock.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.automation.mock.SAPGUIMock</argument>
                                        <argument>--type</argument>
                                        <argument>app-image</argument>
                                        <argument>--dest</argument>
                                        <argument>executables</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx512m</argument>
                                        <argument>--app-version</argument>
                                        <argument>1.0</argument>
                                        <argument>--vendor</argument>
                                        <argument>Universal Automation Framework</argument>
                                        <argument>--description</argument>
                                        <argument>SAP GUI Mock Application for Testing</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- Create AS400 Terminal Mock executable -->
                            <execution>
                                <id>create-as400-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>                                <configuration>
                                    <executable>jpackage</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>--input</argument>
                                        <argument>mock-apps</argument>
                                        <argument>--name</argument>
                                        <argument>AS400TerminalMock</argument>
                                        <argument>--main-jar</argument>
                                        <argument>AS400TerminalMock-as400-mock.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.automation.mock.AS400TerminalMock</argument>
                                        <argument>--type</argument>
                                        <argument>app-image</argument>
                                        <argument>--dest</argument>
                                        <argument>executables</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx512m</argument>
                                        <argument>--app-version</argument>
                                        <argument>1.0</argument>
                                        <argument>--vendor</argument>
                                        <argument>Universal Automation Framework</argument>
                                        <argument>--description</argument>
                                        <argument>AS400 Terminal Mock Application for Testing</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- Create Excel Mock executable -->
                            <execution>
                                <id>create-excel-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>                                <configuration>
                                    <executable>jpackage</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>--input</argument>
                                        <argument>mock-apps</argument>
                                        <argument>--name</argument>
                                        <argument>ExcelMock</argument>
                                        <argument>--main-jar</argument>
                                        <argument>ExcelMock-excel-mock.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.automation.mock.ExcelMock</argument>
                                        <argument>--type</argument>
                                        <argument>app-image</argument>
                                        <argument>--dest</argument>
                                        <argument>executables</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx512m</argument>
                                        <argument>--app-version</argument>
                                        <argument>1.0</argument>
                                        <argument>--vendor</argument>
                                        <argument>Universal Automation Framework</argument>
                                        <argument>--description</argument>
                                        <argument>Excel Mock Application for Testing</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- Create Oracle Forms Mock executable -->
                            <execution>
                                <id>create-oracle-forms-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>                                <configuration>
                                    <executable>jpackage</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>--input</argument>
                                        <argument>mock-apps</argument>
                                        <argument>--name</argument>
                                        <argument>OracleFormsMock</argument>
                                        <argument>--main-jar</argument>
                                        <argument>OracleFormsMock-oracle-forms-mock.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>com.automation.mock.OracleFormsMock</argument>
                                        <argument>--type</argument>
                                        <argument>app-image</argument>
                                        <argument>--dest</argument>
                                        <argument>executables</argument>
                                        <argument>--java-options</argument>
                                        <argument>-Xmx512m</argument>
                                        <argument>--app-version</argument>
                                        <argument>1.0</argument>
                                        <argument>--vendor</argument>
                                        <argument>Universal Automation Framework</argument>
                                        <argument>--description</argument>
                                        <argument>Oracle Forms Mock Application for Testing</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.2.5</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- 🛡️ Safety Validation Profile - Ensures all feature files are safe before execution -->
        <profile>
            <id>safety-validation</id>
            <activation>
                <property>
                    <name>safety.validate</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Safety Linting - Basic safety checks -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>safety-lint-check</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>scripts/safety-lint.sh</argument>
                                        <argument>src/test/resources/features</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            
                            <!-- Comprehensive Safety Validation -->
                            <execution>
                                <id>comprehensive-safety-validation</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>scripts/safety-validate.sh</argument>
                                        <argument>src/test/resources/features</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Fail build on safety violations -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>enforce-safety-standards</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>SAFETY.md</file>
                                                <file>scripts/safety-lint.sh</file>
                                                <file>scripts/safety-validate.sh</file>
                                            </files>
                                            <message>🛡️ Required safety documentation and scripts must exist!</message>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>        <!-- 🛡️ Safe Testing Profile - TEMPORARILY DISABLED FOR DEMO
        <profile>
            <id>safe-testing</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>pre-test-safety-check</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>scripts/safety-lint.sh</argument>
                                    </arguments>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        END DISABLED SAFE TESTING -->
        
        <!-- ...existing profiles... -->
    </profiles>
</project>
